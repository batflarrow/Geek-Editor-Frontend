{"version":3,"sources":["Loginsignup/Home.js","assets/images/Logo.png","Components/Navbar.js","Components/User.js","Compiler/Compiler.js","Dashboard/Dashboard.js","App.js","index.js"],"names":["LogSign","useState","setFNameSignup","setLNameSignup","userNameSignup","setUserNameSignup","setEmailSignup","setPasswordSignup","userNameSignin","setUserNameSignin","passwordSignin","setPasswordSignin","a","username","password","signupShow","setSignupShow","signupButton","exec","console","log","alert","class","className","id","action","required","type","placeholder","onChange","e","target","value","onClick","href","style","color","Navbar","props","link","Number","check","forMode","setForMode","mode","thememode","src","logo","alt","htmlFor","to","activeStyle","background","checkfunc","User","require","config","Compiler","submit","preventDefault","outputText","document","getElementsById","innerHTML","state","input","localStorage","getItem","output","language_id","user_input","myRef","React","createRef","evt","keyCode","element","this","current","next","createElement","appendChild","getElementById","endsWith","lastElementChild","removeChild","ref","textRef","name","onKeyDown","handleKeyDown","bind","language","userInput","readonly","readOnly","Component","Dashboard","App","setCheck","setMode","exact","path","render","location","key","TransitionGroup","CSSTransition","classNames","timeout","children","ReactDOM"],"mappings":"0WAqHeA,EAjHC,WAAO,IAAD,EAGlB,EAAsCC,qBAAtC,mBAAoBC,GAApB,WACA,EAAsCD,qBAAtC,mBAAoBE,GAApB,WACA,EAA4CF,qBAA5C,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAsCJ,qBAAtC,mBAAoBK,GAApB,WACA,EAA4CL,qBAA5C,mBAAuBM,GAAvB,WAcA,MAA4CN,qBAA5C,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAA4CR,qBAA5C,mBAAOS,EAAP,KAAuBC,EAAvB,KAtBkB,4CAwBlB,sBAAAC,EAAA,uDACiB,CACTC,SAAUL,EACVM,SAAUJ,IAHlB,4CAxBkB,sBAqClB,MAAoCT,mBAAS,GAA7C,mBAAOc,EAAP,KAAmBC,EAAnB,KACA,SAASC,IANO,gBAAgBC,KAOTd,IACfY,EAAc,EAAIA,GAClBG,QAAQC,IAAIL,IAEZM,MAAM,2BAId,OACI,mCAEI,qBAAKC,MAAM,OAAX,SACI,sBAAKC,UAA2B,IAAfR,EAAmB,YAAc,+BAAgCS,GAAG,YAArF,UACA,qBAAKF,MAAM,mCAAX,SACI,uBAAMG,OAAO,IAAb,UACA,oBAAIH,MAAM,KAAV,4BACA,uBAAOA,MAAM,QAAQI,UAAQ,EAACF,GAAG,cAAcG,KAAK,OAAOC,YAAY,aAAaC,SAAU,SAACC,GAAD,OAAO5B,EAAe4B,EAAEC,OAAOC,UAC7H,uBAAOV,MAAM,QAAQI,UAAQ,EAACF,GAAG,cAAcG,KAAK,OAAOC,YAAY,YAAYC,SAAU,SAACC,GAAD,OAAO3B,EAAe2B,EAAEC,OAAOC,UAC5H,uBAAOV,MAAM,QAAQI,UAAQ,EAACF,GAAG,cAAcG,KAAK,OAAOC,YAAY,YAAYC,SAAU,SAACC,GAAD,OAAOzB,EAAkByB,EAAEC,OAAOC,UAC/H,uBAAOV,MAAM,QAAQI,UAAQ,EAACF,GAAG,eAAeG,KAAK,QAAQC,YAAY,QAAQC,SAAU,SAACC,GAAD,OAAOxB,EAAewB,EAAEC,OAAOC,UAC1H,uBAAOV,MAAM,QAAQI,UAAQ,EAACF,GAAG,kBAAkBG,KAAK,WAAWC,YAAY,WAAWC,SAAU,SAACC,GAAD,OAAOvB,EAAkBuB,EAAEC,OAAOC,UACtI,wBAAQV,MAAM,SAASW,QAnDvC,aAmDgB,0BAKJ,qBAAKX,MAAM,mCAAX,SACI,uBAAMG,OAAO,YAAb,UACA,oBAAIH,MAAM,KAAV,qBACA,uBAAOA,MAAM,QAAQI,UAAQ,EAACF,GAAG,eAAeG,KAAK,QAAQC,YAAY,QAAQC,SAAU,SAACC,GAAD,OAAOrB,EAAkBqB,EAAEC,OAAOC,UAC7H,uBAAOV,MAAM,QAAQI,UAAQ,EAACF,GAAG,cAAcG,KAAK,WAAWC,YAAY,WAAWC,SAAU,SAACC,GAAD,OAAOnB,EAAkBmB,EAAEC,OAAOC,UAClI,mBAAGV,MAAM,IAAIY,KAAK,IAAlB,mCAGA,wBAAQZ,MAAM,SAASW,QAzErB,2CAyE4CC,KAAK,YAAnD,0BAKJ,qBAAKZ,MAAM,oBAAX,SACI,sBAAKA,MAAM,UAAX,UACA,sBAAKA,MAAM,6BAAX,UACI,oBAAIA,MAAM,KAAV,2BACA,oBAAGA,MAAM,IAAT,UACC,IADD,oEAIA,2BAAQW,QAAShB,EAAcK,MAAM,SAASE,GAAG,UAAjD,mBAA6D,UAA7D,2CAIJ,sBAAKF,MAAM,8BAAX,UACI,qBAAIA,MAAM,KAAKa,MAAO,CAAEC,MAAO,SAA/B,UACC,IADD,2BAIA,oBAAId,MAAM,KAAKa,MAAO,CAAEC,MAAO,SAA/B,mCAGA,4BACA,wBAAQH,QAAShB,EAAcK,MAAM,SAASa,MAAO,CAAEC,MAAO,SAAWZ,GAAG,SAA5E,uC,QCvGT,G,MAAA,IAA0B,kCCqD1Ba,EAhDA,SAACC,GACZ,MAAwBrC,mBAAS,QAAjC,mBAAOsC,EAAP,KAGA,GAHA,KAG8BtC,mBAAS,GAAD,OAF1B,CAAC,OAAQ,OAEyBuC,OAAOF,EAAMG,WAA3D,mBAAOC,EAAP,KAAgBC,EAAhB,KAaMC,EAAON,EAAMO,UACnB,OACI,qCAEI,sBAAMtB,UAAS,iBAAYqB,GAA3B,UACI,qBAAKrB,UAAU,OAAf,SACI,qBAAKA,UAAU,UAAUuB,IAAKC,EAAMC,IAAI,WAE5C,uBAAOrB,KAAK,WAAWH,GAAG,UAC1B,uBAAOyB,QAAQ,QAAQ1B,UAAU,yBACjC,uBAAO0B,QAAQ,QAAQ1B,UAAU,2BACjC,+BAEI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAASA,UAAS,UAAKgB,EAAL,UAAmBW,GAAG,YAAYC,YAAa,CAACC,WAAY,QAAQhB,MAAM,SAA5F,wBAEJ,oBAAIb,UAAU,WAAd,SACI,cAAC,IAAD,CAASA,UAAS,UAAKgB,EAAL,iBAA0BW,GAAG,aAAcC,YAAa,CAACC,WAAY,QAAQhB,MAAM,SAArG,+BAIZ,qBAAKb,UAAU,WAAWU,QAhCjB,WACA,SAAVS,GACAC,EAAW,OACXL,EAAMe,cAGLV,EAAW,QACXL,EAAMe,cAyBN,SACG,mBAAG9B,UAAS,gBAAWmB,EAAX,cAAwBA,WCnCpCY,EANF,WACT,OACI,cAAC,EAAD,K,gDCDRC,EAAQ,IAAUC,S,IAEGC,E,kDACjB,WAAYnB,GAAQ,IAAD,8BACf,cAAMA,IA+BVoB,OAhCmB,uCAgCV,WAAO5B,GAAP,eAAAlB,EAAA,sDACLkB,EAAE6B,kBACEC,EAAaC,SAASC,gBAAgB,WAC/BC,UAAY,GACvBH,EAAWG,WAAa,4BAGxBH,EAAWG,WAAa,2BAPnB,2CAhCU,sDAEf,EAAKC,MAAQ,CACTC,MAAOC,aAAaC,QAAQ,UAArB,GACPC,OAAO,GACPC,YAAaH,aAAaC,QAAQ,gBAAkB,EACpDG,WAAW,IAEf,EAAKC,MAAQC,IAAMC,YARJ,E,iDAWnB,SAAcC,GACV,GAAoB,KAAhBA,EAAIC,QAAgB,CACpBxD,QAAQC,IAAI,MACZ,IAAIwD,EAAUC,KAAKN,MAAMO,QACrBC,EAAOlB,SAASmB,cAAc,MAClCJ,EAAQK,YAAYF,GAEJ,IAAhBL,EAAIC,UACJxD,QAAQC,IAAI,MACFyC,SAASqB,eAAe,UAC1BlD,MAAMmD,SAAS,QACfP,EAAUC,KAAKN,MAAMO,SACbM,kBACRR,EAAQS,YAAYT,EAAQQ,qB,oBAsB5C,WACI,IAAIxC,EAAOiC,KAAKvC,MAAMM,KAEtB,OACI,mCACI,sBAAKrB,UAAS,iCAA4BqB,GAA1C,UACI,oBAAIrB,UAAS,UAAKqB,EAAL,SAAb,sBACA,sBAAKrB,UAAU,MAAf,UACI,uBAAO0B,QAAQ,YAAf,SACI,sBAAM1B,UAAS,UAAKqB,EAAL,iBAAkBA,EAAlB,iBAAf,yBAEJ,cAAC,aAAD,UACI,sBAAKrB,UAAU,OAAf,UACI,cAAC,iBAAD,UACI,oBAAIC,GAAG,WAAWF,MAAM,OAAOgE,IAAKT,KAAKN,MAAzC,SACI,2BAGR,cAAC,iBAAD,UACI,0BACIe,IAAKT,KAAKU,QACV7D,UAAQ,EACR8D,KAAK,WACLhE,GAAG,SACHF,MAAM,OAENC,UAAS,UAAKqB,EAAL,gBAEThB,YAAY,qBACZ6D,UAAWZ,KAAKa,cAAcC,KAAKd,eAMnD,wBAAQvD,MAAM,aAAd,iBACA,sBAAKC,UAAU,mBAAf,UACI,uBAAO0B,QAAQ,OAAO1B,UAAU,OAAhC,SACI,mBAAGA,UAAS,UAAKqB,EAAL,wBAAZ,yBAEJ,yBACIZ,MAAO6C,KAAKb,MAAMK,YAClBxC,SAAUgD,KAAKe,SACfpE,GAAG,OACHD,UAAU,WAJd,UAMI,wBAAQS,MAAM,KAAd,iBACA,wBAAQA,MAAM,KAAd,eACA,wBAAQA,MAAM,KAAd,kBACA,wBAAQA,MAAM,KAAd,6BAIZ,sBAAKT,UAAS,UAAKqB,EAAL,oBAAd,UACI,sBAAMrB,UAAU,GAAhB,wBACA,uBACA,0BACIC,GAAG,QACHD,UAAS,gBAAWqB,EAAX,SACTf,SAAUgD,KAAKgB,UACfjE,YAAY,4BAGpB,qBAAKL,UAAU,GAAf,SACI,gCACI,sBAAMA,UAAS,UAAKqB,EAAL,SAAf,oBACA,0BACIkD,UAAQ,EACRtE,GAAG,SACHI,YAAY,gCACZmE,SAAS,wB,GArHHC,a,QC4DvBC,G,MA9DG,SAAC3D,GACf,OACI,mCACI,8BACI,qBAAKf,UAAS,+BAA0Be,EAAMM,MAA9C,SACI,sBAAKrB,UAAS,+BAA0Be,EAAMM,KAAhC,KAAd,UACI,sBAAKrB,UAAU,QAAf,UACI,sBACIC,GAAG,MACHU,KAAK,2BACLH,OAAO,SAHX,UAKK,IACD,qBACIR,UAAU,OACVuB,IAAI,yGACJE,IAAI,QAGZ,sBAAKzB,UAAU,OAAf,UACI,sBAAMD,MAAM,0BAAZ,sBAGA,qBAAIA,MAAM,eAAV,UACI,oBAAIC,UAAU,KAAd,qBACA,oBAAIA,UAAU,KAAd,qBACA,oBAAIA,UAAU,KAAd,+BACA,oBAAIA,UAAU,KAAd,mCAIZ,0BAASA,UAAU,QAAnB,UACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGD,MAAM,UAAT,kBACA,mBAAGC,UAAU,KAAb,sBAEJ,sBAAKA,UAAU,oBAAf,UACI,mBAAGD,MAAM,UAAT,uBACA,mBAAGC,UAAU,KAAb,qBAEJ,sBAAKA,UAAU,uBAAf,UACI,mBAAGD,MAAM,UAAT,yBACA,oBAAGC,UAAU,KAAb,gBACQ,cAAC,IAAD,CAAaD,MAAM,mBAInC,qBAAKC,UAAU,iBAAf,SACI,oBAAGD,MAAM,UAAT,yBACiB,IACb,sBAAMC,UAAU,KAAhB,wCC7CrB,SAAS2E,IACpB,MAA0BjG,mBAAS,KAAnC,mBAAOwC,EAAP,KAAc0D,EAAd,KACA,EAAsBlG,mBAAS,SAA/B,mBAAK2C,EAAL,KAAWwD,EAAX,KACM/C,EAAY,WAEV8C,EADU,MAAV1D,EACS,IAGA,KAKT2D,EADS,UAATxD,EACQ,OAIA,UAIhB,OACI,mCACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SAA0B,cAAC,EAAD,MAC1B,cAAC,IAAD,CAAOC,OAAQ,YAAmB,IAAhBC,EAAe,EAAfA,SAEd,OADArF,QAAQC,IAAIoF,EAASC,KAEjB,qCACI,cAAC,EAAD,CAAQhE,MAAOA,EAAOY,UAAWA,EAAWR,UAAWD,IACvD,cAAC8D,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAEIC,WAAW,OACXC,QAAS,IAHb,SAII,eAAC,IAAD,WACI,cAAC,IAAD,CAAOR,OAAK,EAACC,KAAK,YAAYQ,SAAU,cAAC,EAAD,CAAUrE,MAAOA,EAAOY,UAAWA,EAAWT,KAAMA,MAC5F,cAAC,IAAD,CAAOyD,OAAK,EAACC,KAAK,aAAaQ,SAAU,cAAC,EAAD,CAAWrE,MAAOA,EAAOY,UAAWA,EAAWT,KAAMA,UAL7F4D,EAASC,kBCpClDM,IAASR,OACR,cAAC,IAAD,UACC,cAACL,EAAD,MAGDrC,SAASqB,eAAe,W","file":"static/js/main.820b0663.chunk.js","sourcesContent":["import React, { useState , useContext } from 'react';\r\nimport axios from \"axios\";\r\nimport \"./Home.css\";\r\n\r\nconst LogSign = () => {\r\n\r\n    //signup\r\n    const [fNameSignup, setFNameSignup] = useState();\r\n    const [lNameSignup, setLNameSignup] = useState();\r\n    const [userNameSignup, setUserNameSignup] = useState();\r\n    const [emailSignup, setEmailSignup] = useState();\r\n    const [passwordSignup, setPasswordSignup] = useState();\r\n\r\n    function signupSubmit() {\r\n        const body = {\r\n            fname: fNameSignup,\r\n            lname: lNameSignup,\r\n            username: userNameSignup,\r\n            email: emailSignup,\r\n            password: passwordSignup,\r\n        };  \r\n    }\r\n\r\n    //login\r\n    // const [emailSignin, setEmailSignin] = useState();\r\n    const [userNameSignin, setUserNameSignin] = useState();\r\n    const [passwordSignin, setPasswordSignin] = useState();\r\n\r\n    async function signinSubmit() {\r\n        const body = { \r\n            username: userNameSignin,\r\n            password: passwordSignin,\r\n        }\r\n    };\r\n    \r\n    function isUserNameValid(username) {\r\n        const res = /^[a-z0-9_.]+$/.exec(username);\r\n        const valid = !!res;\r\n        return valid;\r\n    }\r\n    \r\n    const [signupShow, setSignupShow] = useState(0);\r\n    function signupButton() {\r\n        if(isUserNameValid(userNameSignup)) {\r\n            setSignupShow(1 - setSignupShow);\r\n            console.log(signupShow);\r\n        } else {\r\n            alert('Enter a valid Username!');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div class=\"full\">\r\n                <div className={ signupShow === 0 ? \"container\" : \"container right-panel-active\"} id=\"container\">\r\n                <div class=\"form-container sign-up-container\">\r\n                    <form action=\"/\">\r\n                    <h1 class=\"h1\">Create Account</h1>\r\n                    <input class=\"input\" required id=\"name_signup\" type=\"text\" placeholder=\"First Name\" onChange={(e) => setFNameSignup(e.target.value)}/>\r\n                    <input class=\"input\" required id=\"name_signup\" type=\"text\" placeholder=\"Last Name\" onChange={(e) => setLNameSignup(e.target.value)}/>\r\n                    <input class=\"input\" required id=\"name_signup\" type=\"text\" placeholder=\"User Name\" onChange={(e) => setUserNameSignup(e.target.value)}/>\r\n                    <input class=\"input\" required id=\"email_signup\" type=\"email\" placeholder=\"Email\" onChange={(e) => setEmailSignup(e.target.value)}/>\r\n                    <input class=\"input\" required id=\"password_signup\" type=\"password\" placeholder=\"Password\" onChange={(e) => setPasswordSignup(e.target.value)}/>\r\n                    <button class=\"button\" onClick={signupSubmit}>\r\n                        Sign Up\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n                <div class=\"form-container sign-in-container\">\r\n                    <form action=\"/compiler\">\r\n                    <h1 class=\"h1\">Sign in</h1>\r\n                    <input class=\"input\" required id=\"email_signin\" type=\"email\" placeholder=\"Email\" onChange={(e) => setUserNameSignin(e.target.value)}/>\r\n                    <input class=\"input\" required id=\"pass_signin\" type=\"password\" placeholder=\"Password\" onChange={(e) => setPasswordSignin(e.target.value)}/>\r\n                    <a class=\"a\" href=\"#\">\r\n                        Forgot your password?\r\n                    </a>\r\n                    <button class=\"button\" onClick={signinSubmit} href=\"/compiler\">\r\n                        Sign In\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n                <div class=\"overlay-container\">\r\n                    <div class=\"overlay\">\r\n                    <div class=\"overlay-panel overlay-left\">\r\n                        <h1 class=\"h1\">Welcome Back!</h1>\r\n                        <p class=\"p\">\r\n                        {\" \"}\r\n                            To keep connected with us please login with your personal info\r\n                        </p>\r\n                        <button onClick={signupButton} class=\"button\" id=\"ghost1\" id=\"signIn\">\r\n                            Sign In\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"overlay-panel overlay-right\">\r\n                        <h2 class=\"h2\" style={{ color: \"black\" }}>\r\n                        {\" \"}\r\n                            Don't Have a account!\r\n                        </h2>\r\n                        <h3 class=\"h3\" style={{ color: \"black\" }}>\r\n                            Wanna sign up either?\r\n                        </h3>\r\n                        <b>\r\n                        <button onClick={signupButton} class=\"button\" style={{ color: \"black\" }} id=\"signUp\">\r\n                            Sign Up\r\n                        </button>\r\n                        </b>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LogSign","export default __webpack_public_path__ + \"static/media/Logo.88d6840c.png\";","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { NavLink } from 'react-router-dom';\r\nimport \"./Navbar.css\";\r\nimport logo from '../assets/images/Logo.png'; \r\nconst Navbar = (props) => {\r\n    const [link, setLink] = useState('link');\r\n    const arr = ['moon', 'sun'];\r\n    \r\n    const [forMode, setForMode] = useState(`${arr[Number(props.check)]}`);\r\n  \r\n    const changemode=()=>{\r\n        if(forMode==='moon')\r\n        {  setForMode('sun');\r\n           props.checkfunc();\r\n        }\r\n          else \r\n         {  setForMode('moon');\r\n            props.checkfunc();\r\n        }\r\n             \r\n    }\r\n    const mode = props.thememode;\r\n    return (\r\n        <>\r\n            \r\n            <div  className={`navbar ${mode}`}>\r\n                <div className=\"logo\">\r\n                    <img className=\"logoImg\" src={logo} alt=\"Logo\" />\r\n                </div>\r\n                <input type=\"checkbox\" id=\"click\" />\r\n                <label htmlFor=\"click\" className=\"fa fa-bars menu-icon\" ></label>\r\n                <label htmlFor=\"click\" className=\"fa fa-close close-icon\"></label>\r\n                <ul>\r\n\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className={`${link} itemm`} to=\"/compiler\" activeStyle={{background: \"white\",color:\"black\" }}>Compiler</NavLink>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <NavLink className={`${link} active itemm`} to=\"/dashboard\"  activeStyle={{background: \"white\",color:\"black\" }}>Dashboard</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"darkmode\" onClick={changemode}>\r\n               <i className={`fa fa-${forMode}-o ${forMode}`} ></i>  \r\n           </div>\r\n            {/* if(`${link}`==) */}\r\n            \r\n        </>\r\n    );\r\n\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\nimport Navbar from \"./Navbar\"\r\n\r\nconst User = () => {\r\n    return (\r\n        <Navbar/>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import React, { Component } from \"react\";\r\nimport \"./Compiler.css\";\r\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nexport default class Compiler extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            input: localStorage.getItem(\"input\") || ``,\r\n            output: ``,\r\n            language_id: localStorage.getItem(\"language_Id\") || 2,\r\n            user_input: ``,\r\n        };\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    handleKeyDown(evt) {\r\n        if (evt.keyCode === 13) {\r\n            console.log(\"ok\");\r\n            var element = this.myRef.current;\r\n            var next = document.createElement(\"li\");\r\n            element.appendChild(next);\r\n        }\r\n        if (evt.keyCode === 8) {\r\n            console.log(\"ok\");\r\n            var ele = document.getElementById(\"source\");\r\n            if (ele.value.endsWith('\\n')) {\r\n                var element = this.myRef.current;\r\n                if (element.lastElementChild)\r\n                    element.removeChild(element.lastElementChild);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    /* 1.Write Code here for taking value of input, language_id, user_input from local storage*/\r\n\r\n    submit = async (e) => {\r\n        e.preventDefault();\r\n        let outputText = document.getElementsById(\"output\");\r\n        outputText.innerHTML = \"\";\r\n        outputText.innerHTML += \"Creating Submission ...\\n\";\r\n        /* 2. Write Code for creating submission here */\r\n\r\n        outputText.innerHTML += \"Submission Created ...\\n\";\r\n        /* 3. Write Code for getting a submission here */\r\n\r\n        /* 4. Write Code for getting errors or displaying submissison here */\r\n    };\r\n\r\n\r\n    render() {\r\n        let mode = this.props.mode;\r\n        // console.log(mode);\r\n        return (\r\n            <>\r\n                <div className={`compiler-bg background-${mode}`}>\r\n                    <h1 className={`${mode}-text`}>Compiler</h1>\r\n                    <div className=\"hmm\">\r\n                        <label htmlFor=\"solution \">\r\n                            <span className={`${mode}-text ${mode}inputHeading `}>Code Here</span>\r\n                        </label>\r\n                        <ScrollSync>\r\n                            <div className=\"code\">\r\n                                <ScrollSyncPane>\r\n                                    <ol id=\"line-num\" class=\"col1\" ref={this.myRef}>\r\n                                        <li></li>\r\n                                    </ol>\r\n                                </ScrollSyncPane>\r\n                                <ScrollSyncPane>\r\n                                    <textarea\r\n                                        ref={this.textRef}\r\n                                        required\r\n                                        name=\"solution\"\r\n                                        id=\"source\"\r\n                                        class=\"col1\"\r\n                                        // onChange={this.input}\r\n                                        className={`${mode}-text source`}\r\n                                        // value={this.state.input}\r\n                                        placeholder=\"Enter code here :)\"\r\n                                        onKeyDown={this.handleKeyDown.bind(this)}\r\n                                    // readOnly=\"false\"\r\n                                    ></textarea>\r\n                                </ScrollSyncPane>\r\n                            </div>\r\n                        </ScrollSync>\r\n                        <button class=\"button-run\">RUN</button>\r\n                        <div className=\"languageSelector\">\r\n                            <label htmlFor=\"tags\" className=\"mr-1\">\r\n                                <b className={`${mode}-text chooseLanguage`}>Language:</b>\r\n                            </label>\r\n                            <select\r\n                                value={this.state.language_id}\r\n                                onChange={this.language}\r\n                                id=\"tags\"\r\n                                className=\"language\"\r\n                            >\r\n                                <option value=\"54\">C++</option>\r\n                                <option value=\"50\">C</option>\r\n                                <option value=\"62\">Java</option>\r\n                                <option value=\"71\">Python</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`${mode}-text user-input`}>\r\n                        <span className=\"\">User Input</span>\r\n                        <br />\r\n                        <textarea\r\n                            id=\"input\"\r\n                            className={`input ${mode}-text`}\r\n                            onChange={this.userInput}\r\n                            placeholder=\"User input goes here\"\r\n                        ></textarea>\r\n                    </div>\r\n                    <div className=\"\">\r\n                        <div>\r\n                            <span className={`${mode}-text`}>Output</span>\r\n                            <textarea\r\n                                readonly\r\n                                id=\"output\"\r\n                                placeholder=\"Output will be displayed here\"\r\n                                readOnly=\"false\"\r\n                            ></textarea>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { AiFillHeart } from \"react-icons/ai\";\r\nimport \"./Dashboard.css\";\r\n\r\nconst Dashboard = (props) => {\r\n    return (\r\n        <>\r\n            <div>\r\n                <div className={`dashboard background-${props.mode}`}>\r\n                    <div className={`main main-background-${props.mode} `}>\r\n                        <nav className=\"item1\">\r\n                            <div\r\n                                id=\"img\"\r\n                                href=\"https://github.com/cmade\"\r\n                                target=\"_blank\"\r\n                            >\r\n                                {\" \"}\r\n                                <img\r\n                                    className=\"img1\"\r\n                                    src=\"https://avatars2.githubusercontent.com/u/10188746?s=460&u=ebd07b3fe70fbaf057d8305f7e611d70be2448e1&v=4\"\r\n                                    alt=\"\"\r\n                                />\r\n                            </div>\r\n                            <div className=\"info\">\r\n                                <span class=\"heading headingUsername\">\r\n                                    Username\r\n                                </span>\r\n                                <ul class=\"personalInfo\">\r\n                                    <li className=\"li\">Name : </li>\r\n                                    <li className=\"li\">Rank : </li>\r\n                                    <li className=\"li\">Github Profile : </li>\r\n                                    <li className=\"li\">Followers : </li>\r\n                                </ul>\r\n                            </div>\r\n                        </nav>\r\n                        <section className=\"other\">\r\n                            <div className=\"other-item\">\r\n                                <div className=\"item2 reviews item\">\r\n                                    <p class=\"heading\">Rank</p>\r\n                                    <p className=\"p1\">2,304</p>\r\n                                </div>\r\n                                <div className=\"item3 rating item\">\r\n                                    <p class=\"heading\">Followers</p>\r\n                                    <p className=\"p1\">4.7k</p>\r\n                                </div>\r\n                                <div className=\"item4 sentiment item\">\r\n                                    <p class=\"heading\">Total Likes</p>\r\n                                    <p className=\"p1\">\r\n                                        966{<AiFillHeart class=\"heart\" />}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"item5 visitors\">\r\n                                <p class=\"heading\">\r\n                                    Saved Codes:{\" \"}\r\n                                    <span className=\"p2\">148,825</span>\r\n                                </p>\r\n                            </div>\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n// Components\r\nimport Home from \"./Loginsignup/Home\";\r\nimport User from \"./Components/User\";\r\nimport Compiler from \"./Compiler/Compiler\";\r\nimport Dashboard from \"./Dashboard/Dashboard\";\r\nimport Navbar from \"./Components/Navbar\";\r\nexport default function App() {\r\n    const [check, setCheck] = useState('0');\r\n    let [mode, setMode] = useState('light');\r\n    const checkfunc = () => {\r\n        if (check === '0') {\r\n            setCheck('1');\r\n        }\r\n        else {\r\n            setCheck('0');\r\n        }\r\n\r\n\r\n        if (mode === 'light') {\r\n            setMode('dark');\r\n\r\n        }\r\n        else {\r\n            setMode('light');\r\n\r\n        }\r\n    };\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route exact path=\"/\"><Home /></Route>\r\n                <Route exact path=\"/user\"><User /></Route>\r\n                <Route render={({ location }) => {\r\n                    console.log(location.key);\r\n                    return (\r\n                        <>\r\n                            <Navbar check={check} checkfunc={checkfunc} thememode={mode} />\r\n                            <TransitionGroup>\r\n                                <CSSTransition\r\n                                    key={location.key}\r\n                                    classNames=\"fade\"\r\n                                    timeout={500}>\r\n                                    <Switch>\r\n                                        <Route exact path=\"/compiler\" children={<Compiler check={check} checkfunc={checkfunc} mode={mode} />}></Route>\r\n                                        <Route exact path=\"/dashboard\" children={<Dashboard check={check} checkfunc={checkfunc} mode={mode} />}></Route>\r\n                                    </Switch>\r\n                                </CSSTransition>\r\n                            </TransitionGroup>\r\n                        </>);\r\n                }} />\r\n\r\n            </Switch >\r\n        </>\r\n    );\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\t<BrowserRouter>\r\n\t\t<App />\r\n\t</BrowserRouter>,\r\n\r\n\tdocument.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}